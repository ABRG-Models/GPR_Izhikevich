<modelMetaData>
 <population name="STN">
  <xPos value="2.0962"/>
  <yPos value="3.40261"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="254" red="0"/>
  <size value="1"/>
  <tag value="1"/>
  <x3D value="0"/>
  <y3D value="-1"/>
  <z3D value="-2"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="SNr" showlabel="0" source="STN" style="4">
  <start x="1.2645" y="3.16555"/>
  <curves>
   <curve>
    <C1 xpos="0.718454" ypos="3.15735"/>
    <C2 xpos="0.562234" ypos="2.93586"/>
    <end xpos="0.589725" ypos="2.02205"/>
   </curve>
  </curves>
  <synapseConnection name="STN to SNr Synapse 0 weight_update"/>
  <synapseConnection name="STN to SNr Synapse 1 weight_update"/>
 </projection>
 <genericInput destination="STN to SNr Synapse 0 postsynapse" srcPort="v" source="SNr" dstPort="v">
  <start x="0.7405900955200195" y="2.020999670028687"/>
  <curves>
   <curve>
    <C1 xpos="0.7307014465332031" ypos="2.265626192092896"/>
    <C2 xpos="0.5687694549560547" ypos="2.229004144668579"/>
    <end xpos="0.589725136756897" ypos="2.022047758102417"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="STN to SNr Synapse 1 postsynapse" srcPort="v" source="SNr" dstPort="v">
  <start x="0.7187254428863525" y="2.021016359329224"/>
  <curves>
   <curve>
    <C1 xpos="0.7441957592964172" ypos="2.227088689804077"/>
    <C2 xpos="0.5784082412719727" ypos="2.225165367126465"/>
    <end xpos="0.589725136756897" ypos="2.022047758102417"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="GPe" showlabel="0" source="STN" style="4">
  <start x="2.93113" y="3.14886"/>
  <curves>
   <curve>
    <C1 xpos="3.55484" ypos="3.14315"/>
    <C2 xpos="3.53947" ypos="2.91278"/>
    <end xpos="3.55366" ypos="2.00037"/>
   </curve>
  </curves>
  <synapseConnection name="STN to GPe Synapse 0 weight_update"/>
  <synapseConnection name="STN to GPe Synapse 1 weight_update"/>
 </projection>
 <genericInput destination="STN to GPe Synapse 0 postsynapse" srcPort="v" source="GPe" dstPort="v">
  <start x="3.729272127151489" y="2.000367164611816"/>
  <curves>
   <curve>
    <C1 xpos="3.713672637939453" ypos="2.186493873596191"/>
    <C2 xpos="3.553854942321777" ypos="2.203994274139404"/>
    <end xpos="3.553650140762329" ypos="2.000367164611816"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="STN to GPe Synapse 1 postsynapse" srcPort="v" source="GPe" dstPort="v">
  <start x="3.743731498718262" y="2.000367164611816"/>
  <curves>
   <curve>
    <C1 xpos="3.71362042427063" ypos="2.211493968963623"/>
    <C2 xpos="3.546284198760986" ypos="2.233994245529175"/>
    <end xpos="3.553650140762329" ypos="2.000367164611816"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="SNr">
  <xPos value="0.292703"/>
  <yPos value="1.52083"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="254" green="254" red="0"/>
  <size value="1"/>
  <tag value="1"/>
  <x3D value="0"/>
  <y3D value="5"/>
  <z3D value="-6"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="Thalamus" showlabel="0" source="SNr" style="0">
  <start x="0.214398" y="1.02083"/>
  <curves>
   <curve>
    <C1 xpos="-0.386175" ypos="-0.913647"/>
    <C2 xpos="-3.88928" ypos="2.17604"/>
    <end xpos="-3.94766" ypos="4.00507"/>
   </curve>
  </curves>
  <synapseConnection name="SNr to Thalamus Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="SNr to Thalamus Synapse 0 postsynapse" srcPort="v" source="Thalamus" dstPort="v">
  <start x="-4.219235897064209" y="4.005256175994873"/>
  <curves>
   <curve>
    <C1 xpos="-4.330529689788818" ypos="3.557803392410278"/>
    <C2 xpos="-3.790755987167358" ypos="3.773692846298218"/>
    <end xpos="-3.947655439376831" ypos="4.005066394805908"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="GPe">
  <xPos value="4.03802"/>
  <yPos value="1.50043"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="254" green="0" red="0"/>
  <size value="1"/>
  <tag value="2"/>
  <x3D value="0"/>
  <y3D value="-7"/>
  <z3D value="-6"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="SNr" showlabel="1" source="GPe" style="0">
  <start x="3.20444" y="1.53364"/>
  <curves>
   <curve>
    <C1 xpos="2.42817" ypos="1.33724"/>
    <C2 xpos="1.8521" ypos="1.48"/>
    <end xpos="1.12602" ypos="1.52892"/>
   </curve>
  </curves>
  <synapseConnection name="GPe to SNr Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.2" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="GPe to SNr Synapse 0 postsynapse" srcPort="v" source="SNr" dstPort="v">
  <start x="1.126021981239319" y="1.384238362312317"/>
  <curves>
   <curve>
    <C1 xpos="1.284108281135559" ypos="1.344192147254944"/>
    <C2 xpos="1.375808596611023" ypos="1.536762952804565"/>
    <end xpos="1.126021981239319" ypos="1.528917193412781"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="GPe" showlabel="1" source="GPe" style="0">
  <start x="4.87111" y="1.30037"/>
  <curves>
   <curve>
    <C1 xpos="5.87111" ypos="1.30037"/>
    <C2 xpos="4.539" ypos="0.0700613"/>
    <end xpos="4.57112" ypos="1.00037"/>
   </curve>
  </curves>
  <synapseConnection name="GPe to GPe Synapse 0 weight_update">
   <Script text="#Name: StochasticCrossChannels&#xa;#Divide population into n channels.&#xa;#Each channel stocastically connects to neurons in all&#xa;#other channels with the given connection probability conn_prob.&#xa;#Useful for implementing cross-channel inhibition.&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        # Cycle through the channels we'll inhibit now&#xa;        for inhib_channel in xrange(int(channels)):&#xa;&#xa;            # Don't connect to self:&#xa;            if inhib_channel == channel:&#xa;                continue&#xa;            &#xa;            dststart = inhib_channel * dstrunlen&#xa;            dstend = ((inhib_channel+1) * dstrunlen)&#xa;    &#xa;            i = srcstart&#xa;            for srcloc in srclocs[srcstart:srcend]:&#xa;                j = dststart&#xa;                for dstloc in dstlocs[dststart:dstend]:&#xa;                    if random.random() &lt; conn_prob:&#xa;                        conn = (i,j,delay)&#xa;                        out.append(conn)&#xa;                    j = j + 1&#xa;                i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.2" channels="3" name="StochasticCrossChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="GPe to GPe Synapse 0 postsynapse" srcPort="v" source="GPe" dstPort="v">
  <start x="4.711008071899414" y="1.000367164611816"/>
  <curves>
   <curve>
    <C1 xpos="4.796436786651611" ypos="0.8054117560386658"/>
    <C2 xpos="4.653731822967529" ypos="0.7340593338012695"/>
    <end xpos="4.571111679077148" ypos="1.000367164611816"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="STN" showlabel="0" source="GPe" style="0">
  <start x="3.21281" y="1.77963"/>
  <curves>
   <curve>
    <C1 xpos="2.72362" ypos="1.85538"/>
    <C2 xpos="2.64508" ypos="2.22977"/>
    <end xpos="2.59471" ypos="2.90396"/>
   </curve>
  </curves>
  <synapseConnection name="GPe to STN Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.2" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="GPe to STN Synapse 0 postsynapse" srcPort="v" source="STN" dstPort="v">
  <start x="2.737397193908691" y="2.903961658477783"/>
  <curves>
   <curve>
    <C1 xpos="2.951361656188965" ypos="2.857583284378052"/>
    <C2 xpos="2.795470952987671" ypos="2.536632061004639"/>
    <end xpos="2.594712257385254" ypos="2.903961658477783"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="D1 MSN">
  <xPos value="0.320166"/>
  <yPos value="5.30914"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="51" green="102" red="152"/>
  <size value="1"/>
  <tag value="3"/>
  <x3D value="0"/>
  <y3D value="5"/>
  <z3D value="1"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="SNr" showlabel="0" source="D1 MSN" style="0">
  <start x="0.174379" y="4.80952"/>
  <curves>
   <curve>
    <C1 xpos="-0.00727479" ypos="4.18678"/>
    <C2 xpos="-0.218337" ypos="4.99965"/>
    <end xpos="0.27981" ypos="2.02205"/>
   </curve>
  </curves>
  <synapseConnection name="D1 MSN to SNr Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.2" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="D1 MSN to SNr Synapse 0 postsynapse" srcPort="v" source="SNr" dstPort="v">
  <start x="0.1259628683328629" y="2.021036863327026"/>
  <curves>
   <curve>
    <C1 xpos="-0.0198584720492363" ypos="2.20812201499939"/>
    <C2 xpos="0.2776773869991302" ypos="2.200119733810425"/>
    <end xpos="0.27981036901474" ypos="2.022047758102417"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="D2 MSN">
  <xPos value="4.21139"/>
  <yPos value="5.30179"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="51" green="102" red="152"/>
  <size value="1"/>
  <tag value="4"/>
  <x3D value="0"/>
  <y3D value="-7"/>
  <z3D value="1"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="GPe" showlabel="1" source="D2 MSN" style="0">
  <start x="4.17062" y="4.80038"/>
  <curves>
   <curve>
    <C1 xpos="4.20072" ypos="3.74208"/>
    <C2 xpos="4.1722" ypos="3.52717"/>
    <end xpos="4.05987" ypos="2.00037"/>
   </curve>
  </curves>
  <synapseConnection name="D2 MSN to GPe Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.2" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="D2 MSN to GPe Synapse 0 postsynapse" srcPort="v" source="GPe" dstPort="v">
  <start x="4.225075721740723" y="2.000367164611816"/>
  <curves>
   <curve>
    <C1 xpos="4.2257399559021" ypos="2.217798233032227"/>
    <C2 xpos="4.066736221313477" ypos="2.211852073669434"/>
    <end xpos="4.059859275817871" ypos="2.000367164611816"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="Ch2_input">
  <xPos value="0.152784"/>
  <yPos value="10.2019"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="0" red="0"/>
  <size value="1"/>
  <tag value="5"/>
  <x3D value="10"/>
  <y3D value="0"/>
  <z3D value="4"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="Cortex" showlabel="0" source="Ch2_input" style="4">
  <start x="-0.240504" y="9.89108"/>
  <curves>
   <curve>
    <C1 xpos="-0.834563" ypos="9.42182"/>
    <C2 xpos="-1.41862" ypos="9.85592"/>
    <end xpos="-1.60067" ypos="9.15301"/>
   </curve>
  </curves>
  <synapseConnection name="Ch2_input to Cortex Synapse 0 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="2"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Ch2_input to Cortex Synapse 1 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="2"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Ch2_input to Cortex Synapse 0 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-1.836220502853394" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-1.83846390247345" ypos="9.550576781809809"/>
    <C2 xpos="-1.60945737361908" ypos="9.490598296702387"/>
    <end xpos="-1.600671768188477" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Ch2_input to Cortex Synapse 1 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-1.809034466743469" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-1.833011388778687" ypos="9.583291625559809"/>
    <C2 xpos="-1.5930997133255" ypos="9.387000655711176"/>
    <end xpos="-1.600671768188477" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="Ch1_input">
  <xPos value="-1.41535"/>
  <yPos value="10.6689"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="0" red="0"/>
  <size value="1"/>
  <tag value="1"/>
  <x3D value="10"/>
  <y3D value="-6"/>
  <z3D value="4"/>
  <is_visualised value="1"/>
 </population>
 <projection destination="Cortex" showlabel="0" source="Ch1_input" style="4">
  <start x="-1.30954" y="10.1851"/>
  <curves>
   <curve>
    <C1 xpos="-1.14904" ypos="9.44788"/>
    <C2 xpos="-2.19021" ypos="10.2545"/>
    <end xpos="-2.17314" ypos="9.15301"/>
   </curve>
  </curves>
  <synapseConnection name="Ch1_input to Cortex Synapse 0 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="1"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Ch1_input to Cortex Synapse 1 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="1"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Ch1_input to Cortex Synapse 0 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-2.005779027938843" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-2.011824607849121" ypos="9.410175895274165"/>
    <C2 xpos="-2.16642165184021" ypos="9.422067260325434"/>
    <end xpos="-2.173142671585083" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Ch1_input to Cortex Synapse 1 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-1.987956643104553" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-1.988040447235107" ypos="9.291254615366938"/>
    <C2 xpos="-2.130745410919189" ypos="9.540988540232661"/>
    <end xpos="-2.173142671585083" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="Ch0_input">
  <xPos value="-3.14321"/>
  <yPos value="10.7616"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="0" red="0"/>
  <size value="1"/>
  <tag value="1"/>
  <x3D value="0"/>
  <y3D value="0"/>
  <z3D value="0"/>
  <is_visualised value="0"/>
 </population>
 <projection destination="Cortex" showlabel="0" source="Ch0_input" style="4">
  <start x="-3.18147" y="10.2613"/>
  <curves>
   <curve>
    <C1 xpos="-3.18147" ypos="9.45547"/>
    <C2 xpos="-2.57075" ypos="10.4567"/>
    <end xpos="-2.62369" ypos="9.15301"/>
   </curve>
  </curves>
  <synapseConnection name="Ch0_input to Cortex Synapse 0 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="0"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Ch0_input to Cortex Synapse 1 weight_update">
   <Script text="#Name: StochasticToOneChannel&#xa;#Author: Seb James&#xa;#PARNAME=dst_channels #LOC=1,1&#xa;#PARNAME=conn_to_channel #LOC=1,2&#xa;#Note: conn_to_channel counts from 0&#xa;#PARNAME=conn_prob #LOC=2,1&#xa;def connectionFunc(srclocs,dstlocs,dst_channels,conn_to_channel,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/dst_channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    dststart = int(conn_to_channel) * dstrunlen&#xa;    dstend = ((int(conn_to_channel)+1) * dstrunlen)&#xa;    &#xa;    i = 0&#xa;    for srcloc in srclocs:&#xa;        j = dststart&#xa;        for dstloc in dstlocs[dststart:dstend]:&#xa;            if random.random() &lt; conn_prob:&#xa;                conn = (i,j,delay)&#xa;                out.append(conn)&#xa;            j = j + 1&#xa;        i = i + 1    &#xa;    &#xa;    return out" conn_prob="0.1" dst_channels="3" name="StochasticToOneChannel" conn_to_channel="0"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Ch0_input to Cortex Synapse 0 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-2.453327417373657" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-2.392370939254761" ypos="9.505312537730219"/>
    <C2 xpos="-2.653996467590332" ypos="9.600449180186274"/>
    <end xpos="-2.623691082000732" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Ch0_input to Cortex Synapse 1 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-2.452904462814331" y="9.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-2.309126377105713" ypos="9.410175895274165"/>
    <C2 xpos="-2.689672708511353" ypos="9.755045508921626"/>
    <end xpos="-2.623691082000732" ypos="9.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="Cortex">
  <xPos value="-2.13766"/>
  <yPos value="8.65219"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="0" red="0"/>
  <size value="1"/>
  <tag value="1"/>
  <x3D value="0"/>
  <y3D value="0"/>
  <z3D value="0"/>
  <is_visualised value="0"/>
 </population>
 <projection destination="Thalamus" showlabel="0" source="Cortex" style="4">
  <start x="-2.51667" y="8.15356"/>
  <curves>
   <curve>
    <C1 xpos="-2.51667" ypos="6.40494"/>
    <C2 xpos="-4.13803" ypos="7.24141"/>
    <end xpos="-4.26234" ypos="5.00507"/>
   </curve>
  </curves>
  <synapseConnection name="Cortex to Thalamus Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Cortex to Thalamus Synapse 1 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Cortex to Thalamus Synapse 0 postsynapse" srcPort="v" source="Thalamus" dstPort="v">
  <start x="-3.984437942504883" y="5.00512170791626"/>
  <curves>
   <curve>
    <C1 xpos="-3.914132833480835" ypos="5.223141193389893"/>
    <C2 xpos="-4.114620208740234" ypos="5.331080436706543"/>
    <end xpos="-4.262335300445557" ypos="5.005066394805908"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Cortex to Thalamus Synapse 1 postsynapse" srcPort="v" source="Thalamus" dstPort="v">
  <start x="-3.984441518783569" y="5.005130290985107"/>
  <curves>
   <curve>
    <C1 xpos="-3.92955493927002" ypos="5.485367774963379"/>
    <C2 xpos="-4.237997055053711" ypos="5.207744121551514"/>
    <end xpos="-4.262335300445557" ypos="5.005066394805908"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="D1 MSN" showlabel="0" source="Cortex" style="4">
  <start x="-1.30502" y="8.46663"/>
  <curves>
   <curve>
    <C1 xpos="-0.291335" ypos="8.54103"/>
    <C2 xpos="-0.0329027" ypos="6.74278"/>
    <end xpos="-0.0329027" ypos="5.80962"/>
   </curve>
  </curves>
  <synapseConnection name="Cortex to D1 MSN Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Cortex to D1 MSN Synapse 1 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Cortex to D1 MSN Synapse 0 postsynapse" srcPort="v" source="D1 MSN" dstPort="v">
  <start x="0.2743857800960541" y="5.809621810913086"/>
  <curves>
   <curve>
    <C1 xpos="0.1745173931121826" ypos="6.902988910675049"/>
    <C2 xpos="-0.6251806020736694" ypos="6.61339282989502"/>
    <end xpos="-0.03290273621678352" ypos="5.809621810913086"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Cortex to D1 MSN Synapse 1 postsynapse" srcPort="v" source="D1 MSN" dstPort="v">
  <start x="0.2743858098983765" y="5.809621810913086"/>
  <curves>
   <curve>
    <C1 xpos="0.174517422914505" ypos="6.902988910675049"/>
    <C2 xpos="-0.6026676893234253" ypos="6.616748809814453"/>
    <end xpos="-0.03290272131562233" ypos="5.809621810913086"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="STN" showlabel="0" source="Cortex" style="4">
  <start x="-1.30499" y="8.67809"/>
  <curves>
   <curve>
    <C1 xpos="0.592903" ypos="8.73522"/>
    <C2 xpos="1.6963" ypos="5.94643"/>
    <end xpos="1.6963" ypos="3.90244"/>
   </curve>
  </curves>
  <synapseConnection name="Cortex to STN Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Cortex to STN Synapse 1 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Cortex to STN Synapse 0 postsynapse" srcPort="v" source="STN" dstPort="v">
  <start x="2.020110607147217" y="3.902442932128906"/>
  <curves>
   <curve>
    <C1 xpos="1.855485200881958" ypos="4.984231948852539"/>
    <C2 xpos="1.096840381622314" ypos="4.651955127716064"/>
    <end xpos="1.696300029754639" ypos="3.902442932128906"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Cortex to STN Synapse 1 postsynapse" srcPort="v" source="STN" dstPort="v">
  <start x="2.020110607147217" y="3.902442932128906"/>
  <curves>
   <curve>
    <C1 xpos="1.855485200881958" ypos="4.984231948852539"/>
    <C2 xpos="1.096840381622314" ypos="4.651955127716064"/>
    <end xpos="1.696300029754639" ypos="3.902442932128906"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <projection destination="D2 MSN" showlabel="0" source="Cortex" style="4">
  <start x="-1.30481" y="8.91313"/>
  <curves>
   <curve>
    <C1 xpos="0.621113" ypos="8.95498"/>
    <C2 xpos="4.37344" ypos="7.96174"/>
    <end xpos="4.243" ypos="5.80038"/>
   </curve>
  </curves>
  <synapseConnection name="Cortex to D2 MSN Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Cortex to D2 MSN Synapse 1 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Cortex to D2 MSN Synapse 0 postsynapse" srcPort="v" source="D2 MSN" dstPort="v">
  <start x="4.543179988861084" y="5.800375938415527"/>
  <curves>
   <curve>
    <C1 xpos="5.094840526580811" ypos="6.635303974151611"/>
    <C2 xpos="4.309207439422607" ypos="6.897469997406006"/>
    <end xpos="4.242993354797363" ypos="5.800375938415527"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Cortex to D2 MSN Synapse 1 postsynapse" srcPort="v" source="D2 MSN" dstPort="v">
  <start x="4.543179988861084" y="5.800375938415527"/>
  <curves>
   <curve>
    <C1 xpos="5.094840526580811" ypos="6.635303974151611"/>
    <C2 xpos="4.309207439422607" ypos="6.897469997406006"/>
    <end xpos="4.242993354797363" ypos="5.800375938415527"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <population name="Thalamus">
  <xPos value="-4.0218"/>
  <yPos value="4.50692"/>
  <animSpeed value="0.2"/>
  <aspectRatio value="1.66667"/>
  <colour blue="0" green="0" red="0"/>
  <size value="1"/>
  <tag value="2"/>
  <x3D value="0"/>
  <y3D value="0"/>
  <z3D value="0"/>
  <is_visualised value="0"/>
 </population>
 <projection destination="Cortex" showlabel="0" source="Thalamus" style="4">
  <start x="-3.44579" y="5.00507"/>
  <curves>
   <curve>
    <C1 xpos="-3.46018" ypos="6.70626"/>
    <C2 xpos="-1.61601" ypos="6.44459"/>
    <end xpos="-1.59756" ypos="8.15301"/>
   </curve>
  </curves>
  <synapseConnection name="Thalamus to Cortex Synapse 0 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
  <synapseConnection name="Thalamus to Cortex Synapse 1 weight_update">
   <Script text="#Name: StochasticChannels&#xa;#Author: Seb James&#xa;#PARNAME=channels #LOC=1,1&#xa;#PARNAME=conn_prob #LOC=1,2&#xa;def connectionFunc(srclocs,dstlocs,channels,conn_prob):&#xa;&#xa;    import math&#xa;    import random&#xa;&#xa;    weight = 1&#xa;    delay = 0&#xa;    &#xa;    srcsize = len(srclocs)&#xa;    srcrunlen = int(srcsize/channels)&#xa;&#xa;    dstsize = len(dstlocs)&#xa;    dstrunlen = int(dstsize/channels)&#xa;    &#xa;    out = []&#xa;    &#xa;    for channel in xrange(int(channels)):&#xa;    &#xa;        srcstart = channel * srcrunlen&#xa;        srcend = ((channel+1) * srcrunlen)&#xa;&#xa;        dststart = channel * dstrunlen&#xa;        dstend = ((channel+1) * dstrunlen)&#xa;    &#xa;        i = srcstart&#xa;        for srcloc in srclocs[srcstart:srcend]:&#xa;            j = dststart&#xa;            for dstloc in dstlocs[dststart:dstend]:&#xa;                if random.random() &lt; conn_prob:&#xa;                    conn = (i,j,delay)&#xa;                    out.append(conn)&#xa;                j = j + 1&#xa;            i = i + 1&#xa;            &#xa;            &#xa;    return out" conn_prob="0.1" channels="3" name="StochasticChannels"/>
   <Config/>
  </synapseConnection>
 </projection>
 <genericInput destination="Thalamus to Cortex Synapse 0 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-2.025399684906006" y="8.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-2.023850202560425" ypos="7.734881972849848"/>
    <C2 xpos="-1.833011388778687" ypos="7.625831222117426"/>
    <end xpos="-1.597559213638306" ypos="8.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
 <genericInput destination="Thalamus to Cortex Synapse 1 postsynapse" srcPort="v" source="Cortex" dstPort="v">
  <start x="-1.983154058456421" y="8.153005218089106"/>
  <curves>
   <curve>
    <C1 xpos="-2.019839763641357" ypos="7.810215091288569"/>
    <C2 xpos="-1.881040573120117" ypos="7.594305610239985"/>
    <end xpos="-1.597559213638306" ypos="8.153005218089106"/>
   </curve>
  </curves>
  <connection/>
 </genericInput>
</modelMetaData>
